from django.core.management.base import BaseCommand
from users.models import Raca, Deficiencia, TipoEnsino, TipoDeVaga

class Command(BaseCommand):
    help = 'Popula dados iniciais fixos no banco (Tipos de Ensino, RaÃ§as e DeficiÃªncias)'

    def handle(self, *args, **options):
        #Tipo de Vaga
        tipos_de_vagas = [
            "Ampla ConcorrÃªncia",
            "PPI (pretas, pardas, indÃ­genas e quilombolas)",
            "Trans e Travestis",
            "PcD (pessoas com deficiÃªncia)"
        ]
        for nome in tipos_de_vagas:
            obj, created = TipoDeVaga.objects.get_or_create(nome=nome)
            if created:
                self.stdout.write(self.style.SUCCESS(f"âœ” Tipo de Ensino '{nome}' criado"))
            else:
                self.stdout.write(self.style.WARNING(f"â„¹ Tipo de Ensino '{nome}' jÃ¡ existe"))

        # Tipos de Ensino
        tipos_ensino = ["REGULAR", "INTEGRAL"]
        for nome in tipos_ensino:
            obj, created = TipoEnsino.objects.get_or_create(nome=nome)
            if created:
                self.stdout.write(self.style.SUCCESS(f"âœ” Tipo de Ensino '{nome}' criado"))
            else:
                self.stdout.write(self.style.WARNING(f"â„¹ Tipo de Ensino '{nome}' jÃ¡ existe"))

        # RaÃ§as
        racas = ["Branca", "Preta", "Parda", "Amarela", "IndÃ­gena"]
        for nome in racas:
            obj, created = Raca.objects.get_or_create(nome=nome)
            if created:
                self.stdout.write(self.style.SUCCESS(f"âœ” RaÃ§a '{nome}' criada"))
            else:
                self.stdout.write(self.style.WARNING(f"â„¹ RaÃ§a '{nome}' jÃ¡ existe"))

        # DeficiÃªncias
        deficiencias = [
            "Nenhuma",
            "DeficiÃªncia fÃ­sica",
            "DeficiÃªncia auditiva",
            "DeficiÃªncia visual",
            "DeficiÃªncia intelectual",
            "DeficiÃªncia mÃºltipla",
            "Transtorno do espectro autista (TEA)"
        ]
        for nome in deficiencias:
            obj, created = Deficiencia.objects.get_or_create(nome=nome)
            if created:
                self.stdout.write(self.style.SUCCESS(f"âœ” DeficiÃªncia '{nome}' criada"))
            else:
                self.stdout.write(self.style.WARNING(f"â„¹ DeficiÃªncia '{nome}' jÃ¡ existe"))

        self.stdout.write(self.style.SUCCESS("ðŸŽ‰ Dados iniciais populados com sucesso!"))
